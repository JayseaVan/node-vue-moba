/* 1."工具样式"概念和 SASS (SCSS) */

/* 2.样式重置 */
* {
    box-sizing: border-box;
    outline: none;
}
html {
    font-size: 13px;
}
body{
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
    -webkit-smoothing: antialiased
}
a {
    color: #666;
    text-decoration: none;
}

/* 3.网站色彩和字体定义 (colors, text) */
// colors 字体颜色、背景颜色
$colors: (
    "primary": #db9e3f,
    "darkblue": #4b67af,
    "white": #fff,
    "light": #f9f9f9,
    "grey": #999,
    "grey-1": #666,
    "dark-1": #343440,
    "dark": #222,
    "black": #000
);
// 👆上面定义的变量要加';'结尾

// 循环遍历生成样式
@each $colorKey,$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        background-color: $color;
    }
}

// text 文字对齐方式
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

// font-size 字体大小 (安装插件"px to rem")
$base-font-size: 1rem; // 根据html根标签设定的13px字体大小确定
$font-sizes: (
    xxs: 0.6154, // 8px
    xs: 0.7692, // 10px
    sm: 0.9231, // 12px
    md: 1,      // 13px
    lg: 1.0769, // 14px
    xl: 1.2308  // 16px
);
@each $sizeKey, $size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

// width  height
.w-100 {
    width: 100%;
}
.h-100 {
    height: 100%;
}

/* 4.通用flex布局样式定义 (flex) */
.d-flex {
    display: flex;
}
.flex-column {
    flex-direction: column;
}

// justify-content 主轴
$flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
);
@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

// align-items 交叉轴
$flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch
);
@each $key, $value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

// 左边固定，右边自动拉伸
.flex-1 {
    flex: 1; // flex-grow: 1; 的简写
}

/* 5.常用边距定义 (margin, padding) */
// spacing
$spacing-types: (m: margin, p: padding);
$spacing-directions: (t: top, r: right, b: bottom, l: left);
$spacing-base-size: 1rem;
$spacing-sizes: (0: 0, 1: 0.25, 2: 0.5, 3: 1, 4: 1.5, 5: 3);

@each $typeKey, $type in $spacing-types {
    // .m-1 { margin: 0.25rem }
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size;
        }
    }
    // .mx-1 { margin: 0 0.25rem 0 0.25rem } .my-1 { margin: 0.25rem 0 0.25rem 0 }
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }
    }
    // .mt-1 { margin-top: 0.25rem }
    @each $directionKey, $direction in $spacing-directions {
        @each $sizeKey, $size in $spacing-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }
}

// button
.btn {
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes, 'sm') * $base-font-size;
    padding: 0.2rem 0.6rem;
}

// nav
.nav {
    .nav-item {
        border-bottom: 3px solid transparent;
        // padding-bottom: 0.1rem;
        &.active{
            border-bottom: 3px solid #fff;
        }
    }
}